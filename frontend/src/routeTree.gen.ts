/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as VerifyRouteImport } from './routes/verify'
import { Route as TerrierTradeRouteImport } from './routes/terrier-trade'
import { Route as ProfileRouteImport } from './routes/profile'
import { Route as LoginRouteImport } from './routes/login'
import { Route as LeaderboardRouteImport } from './routes/leaderboard'
import { Route as DormSelectRouteImport } from './routes/dorm-select'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'
import { Route as ChallengesCategoryIdRouteImport } from './routes/challenges/$categoryId'

const VerifyRoute = VerifyRouteImport.update({
  id: '/verify',
  path: '/verify',
  getParentRoute: () => rootRouteImport,
} as any)
const TerrierTradeRoute = TerrierTradeRouteImport.update({
  id: '/terrier-trade',
  path: '/terrier-trade',
  getParentRoute: () => rootRouteImport,
} as any)
const ProfileRoute = ProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const LeaderboardRoute = LeaderboardRouteImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => rootRouteImport,
} as any)
const DormSelectRoute = DormSelectRouteImport.update({
  id: '/dorm-select',
  path: '/dorm-select',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const ChallengesCategoryIdRoute = ChallengesCategoryIdRouteImport.update({
  id: '/challenges/$categoryId',
  path: '/challenges/$categoryId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dorm-select': typeof DormSelectRoute
  '/leaderboard': typeof LeaderboardRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/terrier-trade': typeof TerrierTradeRoute
  '/verify': typeof VerifyRoute
  '/challenges/$categoryId': typeof ChallengesCategoryIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dorm-select': typeof DormSelectRoute
  '/leaderboard': typeof LeaderboardRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/terrier-trade': typeof TerrierTradeRoute
  '/verify': typeof VerifyRoute
  '/challenges/$categoryId': typeof ChallengesCategoryIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/dorm-select': typeof DormSelectRoute
  '/leaderboard': typeof LeaderboardRoute
  '/login': typeof LoginRoute
  '/profile': typeof ProfileRoute
  '/terrier-trade': typeof TerrierTradeRoute
  '/verify': typeof VerifyRoute
  '/challenges/$categoryId': typeof ChallengesCategoryIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/dorm-select'
    | '/leaderboard'
    | '/login'
    | '/profile'
    | '/terrier-trade'
    | '/verify'
    | '/challenges/$categoryId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/dorm-select'
    | '/leaderboard'
    | '/login'
    | '/profile'
    | '/terrier-trade'
    | '/verify'
    | '/challenges/$categoryId'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/dorm-select'
    | '/leaderboard'
    | '/login'
    | '/profile'
    | '/terrier-trade'
    | '/verify'
    | '/challenges/$categoryId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  DormSelectRoute: typeof DormSelectRoute
  LeaderboardRoute: typeof LeaderboardRoute
  LoginRoute: typeof LoginRoute
  ProfileRoute: typeof ProfileRoute
  TerrierTradeRoute: typeof TerrierTradeRoute
  VerifyRoute: typeof VerifyRoute
  ChallengesCategoryIdRoute: typeof ChallengesCategoryIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/verify': {
      id: '/verify'
      path: '/verify'
      fullPath: '/verify'
      preLoaderRoute: typeof VerifyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/terrier-trade': {
      id: '/terrier-trade'
      path: '/terrier-trade'
      fullPath: '/terrier-trade'
      preLoaderRoute: typeof TerrierTradeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/leaderboard': {
      id: '/leaderboard'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof LeaderboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dorm-select': {
      id: '/dorm-select'
      path: '/dorm-select'
      fullPath: '/dorm-select'
      preLoaderRoute: typeof DormSelectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/challenges/$categoryId': {
      id: '/challenges/$categoryId'
      path: '/challenges/$categoryId'
      fullPath: '/challenges/$categoryId'
      preLoaderRoute: typeof ChallengesCategoryIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  DormSelectRoute: DormSelectRoute,
  LeaderboardRoute: LeaderboardRoute,
  LoginRoute: LoginRoute,
  ProfileRoute: ProfileRoute,
  TerrierTradeRoute: TerrierTradeRoute,
  VerifyRoute: VerifyRoute,
  ChallengesCategoryIdRoute: ChallengesCategoryIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
