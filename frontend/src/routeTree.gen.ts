/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DormSelectRouteImport } from './routes/dorm-select'
import { Route as LayoutRouteImport } from './routes/_layout'
import { Route as IndexRouteImport } from './routes/index'
import { Route as LayoutTerrierTradeRouteImport } from './routes/_layout.terrier-trade'
import { Route as LayoutProfileRouteImport } from './routes/_layout.profile'
import { Route as LayoutLeaderboardRouteImport } from './routes/_layout.leaderboard'
import { Route as LayoutAboutRouteImport } from './routes/_layout.about'
import { Route as LayoutChallengesCategoryIdRouteImport } from './routes/_layout.challenges/$categoryId'

const DormSelectRoute = DormSelectRouteImport.update({
  id: '/dorm-select',
  path: '/dorm-select',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutRoute = LayoutRouteImport.update({
  id: '/_layout',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const LayoutTerrierTradeRoute = LayoutTerrierTradeRouteImport.update({
  id: '/terrier-trade',
  path: '/terrier-trade',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutProfileRoute = LayoutProfileRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutLeaderboardRoute = LayoutLeaderboardRouteImport.update({
  id: '/leaderboard',
  path: '/leaderboard',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutAboutRoute = LayoutAboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => LayoutRoute,
} as any)
const LayoutChallengesCategoryIdRoute =
  LayoutChallengesCategoryIdRouteImport.update({
    id: '/challenges/$categoryId',
    path: '/challenges/$categoryId',
    getParentRoute: () => LayoutRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/dorm-select': typeof DormSelectRoute
  '/about': typeof LayoutAboutRoute
  '/leaderboard': typeof LayoutLeaderboardRoute
  '/profile': typeof LayoutProfileRoute
  '/terrier-trade': typeof LayoutTerrierTradeRoute
  '/challenges/$categoryId': typeof LayoutChallengesCategoryIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/dorm-select': typeof DormSelectRoute
  '/about': typeof LayoutAboutRoute
  '/leaderboard': typeof LayoutLeaderboardRoute
  '/profile': typeof LayoutProfileRoute
  '/terrier-trade': typeof LayoutTerrierTradeRoute
  '/challenges/$categoryId': typeof LayoutChallengesCategoryIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/_layout': typeof LayoutRouteWithChildren
  '/dorm-select': typeof DormSelectRoute
  '/_layout/about': typeof LayoutAboutRoute
  '/_layout/leaderboard': typeof LayoutLeaderboardRoute
  '/_layout/profile': typeof LayoutProfileRoute
  '/_layout/terrier-trade': typeof LayoutTerrierTradeRoute
  '/_layout/challenges/$categoryId': typeof LayoutChallengesCategoryIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/dorm-select'
    | '/about'
    | '/leaderboard'
    | '/profile'
    | '/terrier-trade'
    | '/challenges/$categoryId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/dorm-select'
    | '/about'
    | '/leaderboard'
    | '/profile'
    | '/terrier-trade'
    | '/challenges/$categoryId'
  id:
    | '__root__'
    | '/'
    | '/_layout'
    | '/dorm-select'
    | '/_layout/about'
    | '/_layout/leaderboard'
    | '/_layout/profile'
    | '/_layout/terrier-trade'
    | '/_layout/challenges/$categoryId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  LayoutRoute: typeof LayoutRouteWithChildren
  DormSelectRoute: typeof DormSelectRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/dorm-select': {
      id: '/dorm-select'
      path: '/dorm-select'
      fullPath: '/dorm-select'
      preLoaderRoute: typeof DormSelectRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout': {
      id: '/_layout'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LayoutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_layout/terrier-trade': {
      id: '/_layout/terrier-trade'
      path: '/terrier-trade'
      fullPath: '/terrier-trade'
      preLoaderRoute: typeof LayoutTerrierTradeRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/profile': {
      id: '/_layout/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof LayoutProfileRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/leaderboard': {
      id: '/_layout/leaderboard'
      path: '/leaderboard'
      fullPath: '/leaderboard'
      preLoaderRoute: typeof LayoutLeaderboardRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/about': {
      id: '/_layout/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof LayoutAboutRouteImport
      parentRoute: typeof LayoutRoute
    }
    '/_layout/challenges/$categoryId': {
      id: '/_layout/challenges/$categoryId'
      path: '/challenges/$categoryId'
      fullPath: '/challenges/$categoryId'
      preLoaderRoute: typeof LayoutChallengesCategoryIdRouteImport
      parentRoute: typeof LayoutRoute
    }
  }
}

interface LayoutRouteChildren {
  LayoutAboutRoute: typeof LayoutAboutRoute
  LayoutLeaderboardRoute: typeof LayoutLeaderboardRoute
  LayoutProfileRoute: typeof LayoutProfileRoute
  LayoutTerrierTradeRoute: typeof LayoutTerrierTradeRoute
  LayoutChallengesCategoryIdRoute: typeof LayoutChallengesCategoryIdRoute
}

const LayoutRouteChildren: LayoutRouteChildren = {
  LayoutAboutRoute: LayoutAboutRoute,
  LayoutLeaderboardRoute: LayoutLeaderboardRoute,
  LayoutProfileRoute: LayoutProfileRoute,
  LayoutTerrierTradeRoute: LayoutTerrierTradeRoute,
  LayoutChallengesCategoryIdRoute: LayoutChallengesCategoryIdRoute,
}

const LayoutRouteWithChildren =
  LayoutRoute._addFileChildren(LayoutRouteChildren)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  LayoutRoute: LayoutRouteWithChildren,
  DormSelectRoute: DormSelectRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
